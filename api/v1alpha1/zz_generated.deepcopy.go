//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
RabbitMQ Single Active Consumer Operator
Copyright 2022 VMware, Inc.

This product is licensed to you under the Mozilla Public License 2.0 license (the "License").  You may not use this product except in compliance with the Mozilla 2.0 License.

This product may include a number of subcomponents with separate copyright notices and license terms. Your use of these subcomponents is subject to the terms and conditions of the subcomponent's license, as noted in the LICENSE file.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/rabbitmq/messaging-topology-operator/api/v1beta1"
	"k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuperStreamConsumer) DeepCopyInto(out *SuperStreamConsumer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuperStreamConsumer.
func (in *SuperStreamConsumer) DeepCopy() *SuperStreamConsumer {
	if in == nil {
		return nil
	}
	out := new(SuperStreamConsumer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SuperStreamConsumer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuperStreamConsumerList) DeepCopyInto(out *SuperStreamConsumerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SuperStreamConsumer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuperStreamConsumerList.
func (in *SuperStreamConsumerList) DeepCopy() *SuperStreamConsumerList {
	if in == nil {
		return nil
	}
	out := new(SuperStreamConsumerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SuperStreamConsumerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuperStreamConsumerPodSpec) DeepCopyInto(out *SuperStreamConsumerPodSpec) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(v1.PodSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.PerRoutingKey != nil {
		in, out := &in.PerRoutingKey, &out.PerRoutingKey
		*out = make(map[string]*v1.PodSpec, len(*in))
		for key, val := range *in {
			var outVal *v1.PodSpec
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(v1.PodSpec)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuperStreamConsumerPodSpec.
func (in *SuperStreamConsumerPodSpec) DeepCopy() *SuperStreamConsumerPodSpec {
	if in == nil {
		return nil
	}
	out := new(SuperStreamConsumerPodSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuperStreamConsumerSpec) DeepCopyInto(out *SuperStreamConsumerSpec) {
	*out = *in
	out.SuperStreamReference = in.SuperStreamReference
	in.ConsumerPodSpec.DeepCopyInto(&out.ConsumerPodSpec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuperStreamConsumerSpec.
func (in *SuperStreamConsumerSpec) DeepCopy() *SuperStreamConsumerSpec {
	if in == nil {
		return nil
	}
	out := new(SuperStreamConsumerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuperStreamConsumerStatus) DeepCopyInto(out *SuperStreamConsumerStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1beta1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuperStreamConsumerStatus.
func (in *SuperStreamConsumerStatus) DeepCopy() *SuperStreamConsumerStatus {
	if in == nil {
		return nil
	}
	out := new(SuperStreamConsumerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuperStreamReference) DeepCopyInto(out *SuperStreamReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuperStreamReference.
func (in *SuperStreamReference) DeepCopy() *SuperStreamReference {
	if in == nil {
		return nil
	}
	out := new(SuperStreamReference)
	in.DeepCopyInto(out)
	return out
}
